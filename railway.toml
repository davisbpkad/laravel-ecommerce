[build]
builder = "NIXPACKS"

[build.env]
  NODE_VERSION = "18"
  PHP_VERSION = "8.2"
  APP_ENV = "production"
  ASSET_URL = "https://laravel-ecommerce-production-aa25.up.railway.app"

[phases.build]
commands = [
    "echo '=== Environment Check ==='",
    "node -v",
    "npm -v",
    "pwd",
    "echo '=== Installing PHP dependencies ==='",
    "composer install --no-dev --optimize-autoloader",
    "echo '=== Installing Node dependencies ==='",
    "npm ci --verbose",
    "echo '=== Checking package.json ==='",
    "cat package.json",
    "echo '=== Checking vite.config.ts ==='",
    "cat vite.config.ts",
    "echo '=== Clearing previous build ==='",
    "rm -rf public/build",
    "echo '=== Running Vite Build with verbose output ==='",
    "npm run build --verbose",
    "echo '=== Checking build results ==='",
    "ls -la public/",
    "ls -la public/build/ || echo 'ERROR: Build directory not found'",
    "ls -la public/build/assets/ || echo 'ERROR: Assets directory not found'",
    "cat public/build/manifest.json || echo 'ERROR: Manifest file not found'",
    "echo '=== Build process completed ==='",
    "find public/build -name '*.js' -o -name '*.css' | head -10 || echo 'No built assets found'"
]

[phases.deploy]
commands = [
  "echo '=== DEBUGGING DATABASE CONNECTION ==='",
  "php artisan env",
  "echo '=== DATABASE CONFIG ==='",
  "php artisan config:show database",
  "echo '=== TESTING DATABASE CONNECTION ==='",
  "php artisan tinker --execute=\"try { \\Illuminate\\Support\\Facades\\DB::connection()->getPdo(); echo 'Database connected successfully!'; } catch(Exception \\$e) { echo 'Database connection failed: ' . \\$e->getMessage(); }\"",
  "echo '=== RUNNING MIGRATION WITH VERBOSE OUTPUT ==='",
  "php artisan migrate:fresh --force --verbose",
  "echo '=== CHECKING MIGRATION STATUS ==='",
  "php artisan migrate:status",
  "echo '=== LISTING ALL TABLES ==='",
  "php artisan tinker --execute=\"echo 'Database tables: ' . implode(', ', \\Illuminate\\Support\\Facades\\Schema::getTableListing());\"",
  "echo '=== RUNNING SEEDING ==='",
  "php artisan db:seed --force --verbose",
  "echo '=== VERIFYING USER TABLE ==='",
  "php artisan tinker --execute=\"echo 'Users count: ' . \\App\\Models\\User::count();\"",
  "echo '=== OPTIMIZING APPLICATION ==='",
  "php artisan config:cache",
  "php artisan route:cache",
  "php artisan view:cache",
  "echo 'Deployment completed successfully!'"
]

[start]
cmd = "php artisan serve --host=0.0.0.0 --port=$PORT"
